{"paragraphs":[{"text":"%md\nApp Spark Interpreter property: spark.cassandra.connection.host node.proddataservicescassandra.l4lb.thisdcos.directory  \n","dateUpdated":"Feb 2, 2018 11:47:09 AM","config":{"colWidth":12,"editorMode":"ace/mode/markdown","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1517571206326_391530583","id":"20170207-123004_1812708204","result":{"code":"SUCCESS","type":"HTML","msg":"<p>App Spark Interpreter property: spark.cassandra.connection.host  node.cassandra.l4lb.thisdcos.directory</p>\n"},"dateCreated":"Feb 2, 2018 11:33:26 AM","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:186"},{"text":"%dep\nz.load(\"org.apache.commons:commons-csv:1.2\")\nz.load(\"com.datastax.spark:spark-cassandra-connector_2.10:1.6.4\")","authenticationInfo":{},"dateUpdated":"Feb 2, 2018 11:47:11 AM","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":false,"tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1517571206328_389222089","id":"20170207-123004_947508287","result":{"code":"SUCCESS","type":"TEXT","msg":"DepInterpreter(%dep) deprecated. Load dependency through GUI interpreter menu instead.\nDepInterpreter(%dep) deprecated. Load dependency through GUI interpreter menu instead.\nres0: org.apache.zeppelin.dep.Dependency = org.apache.zeppelin.dep.Dependency@3802dceb\n"},"dateCreated":"Feb 2, 2018 11:33:26 AM","dateStarted":"Feb 2, 2018 11:36:38 AM","dateFinished":"Feb 2, 2018 11:36:53 AM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:187"},{"text":"import com.datastax.spark.connector._\nval hrs = sqlContext\n  .read\n  .format(\"org.apache.spark.sql.cassandra\")\n  .options(Map( \"table\" -> \"hr\", \"keyspace\" -> \"thegym\"))\n  .load()\n  \n  hrs.show()","authenticationInfo":{},"dateUpdated":"Feb 2, 2018 11:47:13 AM","config":{"colWidth":12,"editorMode":"ace/mode/scala","tableHide":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1517571206329_388837341","id":"20170207-123004_1224558699","result":{"code":"SUCCESS","type":"TEXT","msg":"import com.datastax.spark.connector._\nhrs: org.apache.spark.sql.DataFrame = [id: bigint, color: string, deviceid: string, event_timestamp: string, heartrate: int, location: string, user: string]\n+-------------+----------+--------+--------------------+---------+--------------------+------+\n|           id|     color|deviceid|     event_timestamp|heartrate|            location|  user|\n+-------------+----------+--------+--------------------+---------+--------------------+------+\n|1517570248776|0x80FF0000|   14321|2018-02-02T11:17:...|      141|37.4419444,-122.1...|  Tobi|\n|1517567161180|0x80FF0000|   16380|2018-02-02T10:26:...|      128| 37.775,-122.4183333|   Flo|\n|1517570609584|0x8000FF00|   15121|2018-02-02T11:23:...|       94|    44.7694,-106.969|   Ben|\n|1517566047755|0x80FFFFFF|   20452|2018-02-02T10:07:...|      155|34.0522342,-118.2...|  Tony|\n|1517568378779|0x8000FF00|   15121|2018-02-02T10:46:...|       80|    44.7694,-106.969|   Ben|\n|1517570917503|0x80FF0000|   12444|2018-02-02T11:28:...|      155|43.479929,-110.76...| James|\n|1517570011677|0x80FF0000|   16453|2018-02-02T11:13:...|      124|41.850033,-87.650...|   Tim|\n|1517567476672|0x8000FF00|   17445|2018-02-02T10:31:...|      111|32.7152778,-117.1...|Travis|\n|1517569387789|0x80FFFFFF|   16453|2018-02-02T11:03:...|      132|41.850033,-87.650...|   Tim|\n|1517566504486|0x80FFFFFF|   20452|2018-02-02T10:15:...|      150|34.0522342,-118.2...|  Tony|\n|1517569411974|0x80FF0000|   14321|2018-02-02T11:03:...|      130|37.4419444,-122.1...|  Tobi|\n|1517566702485|0x8000FF00|   15121|2018-02-02T10:18:...|       96|    44.7694,-106.969|   Ben|\n|1517566461166|0x80FFFFFF|   16380|2018-02-02T10:14:...|      110| 37.775,-122.4183333|   Flo|\n|1517571172758|0x80FF0000|   20452|2018-02-02T11:32:...|      154|34.0522342,-118.2...|  Tony|\n|1517565813297|0x80FFFFFF|   20452|2018-02-02T10:03:...|      168|34.0522342,-118.2...|  Tony|\n|1517567741884|0x8000FF00|   15121|2018-02-02T10:35:...|       91|    44.7694,-106.969|   Ben|\n|1517566444079|0x80FFFFFF|   15121|2018-02-02T10:14:...|       92|    44.7694,-106.969|   Ben|\n|1517569083386|0x8000FF00|   19201|2018-02-02T10:58:...|       92|42.3584308,-71.05...| Jamie|\n|1517570949667|0x8000FF00|   17445|2018-02-02T11:29:...|      109|32.7152778,-117.1...|Travis|\n|1517569009798|0x8000FF00|   16380|2018-02-02T10:56:...|      118| 37.775,-122.4183333|   Flo|\n+-------------+----------+--------+--------------------+---------+--------------------+------+\nonly showing top 20 rows\n\n"},"dateCreated":"Feb 2, 2018 11:33:26 AM","dateStarted":"Feb 2, 2018 11:36:55 AM","dateFinished":"Feb 2, 2018 11:39:57 AM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:188"},{"text":"hrs.registerTempTable(\"hr\");\nval df= sqlContext.sql(\"Select heartrate, deviceid, user from hr\")\ndf.show();","authenticationInfo":{},"dateUpdated":"Feb 2, 2018 11:40:56 AM","config":{"colWidth":12,"editorMode":"ace/mode/scala","tableHide":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1517571206329_388837341","id":"20170207-123004_1613759481","result":{"code":"SUCCESS","type":"TEXT","msg":"df: org.apache.spark.sql.DataFrame = [heartrate: int, deviceid: string, user: string]\n+---------+--------+------+\n|heartrate|deviceid|  user|\n+---------+--------+------+\n|      141|   14321|  Tobi|\n|      128|   16380|   Flo|\n|       94|   15121|   Ben|\n|      155|   20452|  Tony|\n|       80|   15121|   Ben|\n|      155|   12444| James|\n|      124|   16453|   Tim|\n|      111|   17445|Travis|\n|      132|   16453|   Tim|\n|      150|   20452|  Tony|\n|      130|   14321|  Tobi|\n|       96|   15121|   Ben|\n|      110|   16380|   Flo|\n|      154|   20452|  Tony|\n|      168|   20452|  Tony|\n|       91|   15121|   Ben|\n|       92|   15121|   Ben|\n|       92|   19201| Jamie|\n|      109|   17445|Travis|\n|      118|   16380|   Flo|\n+---------+--------+------+\nonly showing top 20 rows\n\n"},"dateCreated":"Feb 2, 2018 11:33:26 AM","dateStarted":"Feb 2, 2018 11:40:56 AM","dateFinished":"Feb 2, 2018 11:40:59 AM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189"},{"text":"import scala.collection.Map\r\nval limits = Map(\"Flo\" -> 120, \"Tobi\" -> 120, \"Ben\" -> 120, \"Travis\" -> 120, \"James\" -> 120, \"Tim\" -> 120, \"Jamie\" -> 120, \"Tony\" -> 120, \"Joerg\" -> 120, \"Jan\" -> 120, \"Ferdi\" -> 120, \"John\"->120, \"Emil\"->120, \"Me\"->120)\r\nval toLabel = (l: Int, v:Long) => if (v > l) 1 else 0 \r\nval deviceAndHRAndLimit = df.map(r => (r.getString(1).toInt, r.getInt(0), toLabel(limits.getOrElse(r.getString(2), 120), r.getInt(0)), r.getString(2)))","authenticationInfo":{},"dateUpdated":"Feb 2, 2018 11:48:04 AM","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1517571206329_388837341","id":"20170207-123004_1330189149","result":{"code":"SUCCESS","type":"TEXT","msg":"import scala.collection.Map\nlimits: scala.collection.Map[String,Int] = Map(John -> 120, Ferdi -> 120, Me -> 120, Emil -> 120, Jan -> 120, Travis -> 120, Tony -> 120, Tobi -> 120, James -> 120, Tim -> 120, Ben -> 120, Jamie -> 120, Flo -> 120, Joerg -> 120)\ntoLabel: (Int, Long) => Int = <function2>\ndeviceAndHRAndLimit: org.apache.spark.rdd.RDD[(Int, Int, Int, String)] = MapPartitionsRDD[43] at map at <console>:50\n"},"dateCreated":"Feb 2, 2018 11:33:26 AM","dateStarted":"Feb 2, 2018 11:48:04 AM","dateFinished":"Feb 2, 2018 11:48:05 AM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:190","focus":true},{"text":"import org.apache.spark.mllib.util\r\nimport org.apache.spark.mllib\r\nimport org.apache.spark.mllib.tree.DecisionTree\r\nimport org.apache.spark.mllib.tree.model.DecisionTreeModel\r\nimport org.apache.spark.mllib.regression.LabeledPoint\r\nimport org.apache.spark.mllib.linalg.{Vector, Vectors}\r\n\r\nval numClasses = 2\r\nval categoricalFeaturesInfo = Map[Int, Int]()\r\nval impurity = \"gini\"\r\nval maxDepth = 5\r\nval maxBins = 32\r\n\r\nval splits = deviceAndHRAndLimit.map(tuple => LabeledPoint(tuple._3, Vectors.dense(tuple._1, tuple._2)))\r\n                              .randomSplit(Array(0.6, 0.4), seed = 11L)\r\n\r\nval (training, test) = (splits(0).cache(), splits(1))","authenticationInfo":{},"dateUpdated":"Feb 2, 2018 11:48:08 AM","config":{"colWidth":12,"tableHide":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1517571206330_389991587","id":"20170207-123004_971505319","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark.mllib.util\nimport org.apache.spark.mllib\nimport org.apache.spark.mllib.tree.DecisionTree\nimport org.apache.spark.mllib.tree.model.DecisionTreeModel\nimport org.apache.spark.mllib.regression.LabeledPoint\nimport org.apache.spark.mllib.linalg.{Vector, Vectors}\nnumClasses: Int = 2\ncategoricalFeaturesInfo: scala.collection.Map[Int,Int] = Map()\nimpurity: String = gini\nmaxDepth: Int = 5\nmaxBins: Int = 32\nsplits: Array[org.apache.spark.rdd.RDD[org.apache.spark.mllib.regression.LabeledPoint]] = Array(MapPartitionsRDD[45] at randomSplit at <console>:60, MapPartitionsRDD[46] at randomSplit at <console>:60)\ntraining: org.apache.spark.rdd.RDD[org.apache.spark.mllib.regression.LabeledPoint] = MapPartitionsRDD[45] at randomSplit at <console>:60\ntest: org.apache.spark.rdd.RDD[org.apache.spark.mllib.regression.LabeledPoint] = MapPartitionsRDD[46] at randomSplit at <console>:60\n"},"dateCreated":"Feb 2, 2018 11:33:26 AM","dateStarted":"Feb 2, 2018 11:48:08 AM","dateFinished":"Feb 2, 2018 11:48:11 AM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:191","focus":true},{"text":"import org.apache.spark.mllib.classification.{LogisticRegressionModel, LogisticRegressionWithLBFGS}\nimport org.apache.spark.mllib.evaluation.MulticlassMetrics\nimport org.apache.spark.mllib.regression.LabeledPoint\nimport org.apache.spark.mllib.util.MLUtils\n\nval model = new LogisticRegressionWithLBFGS().setNumClasses(2).run(training)","authenticationInfo":{},"dateUpdated":"Feb 2, 2018 11:48:13 AM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1517571206330_389991587","id":"20170207-123004_2067050685","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark.mllib.classification.{LogisticRegressionModel, LogisticRegressionWithLBFGS}\nimport org.apache.spark.mllib.evaluation.MulticlassMetrics\nimport org.apache.spark.mllib.regression.LabeledPoint\nimport org.apache.spark.mllib.util.MLUtils\nmodel: org.apache.spark.mllib.classification.LogisticRegressionModel = org.apache.spark.mllib.classification.LogisticRegressionModel: intercept = 0.0, numFeatures = 2, numClasses = 2, threshold = 0.5\n"},"dateCreated":"Feb 2, 2018 11:33:26 AM","dateStarted":"Feb 2, 2018 11:48:13 AM","dateFinished":"Feb 2, 2018 11:48:23 AM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:192","focus":true},{"text":"val predictionsAndLabels = test.map { case LabeledPoint(label, features) =>\r\n  val prediction = model.predict(features)\r\n  (prediction, label)\r\n}\r\n\r\npredictionsAndLabels.collect()","authenticationInfo":{},"dateUpdated":"Feb 2, 2018 11:48:25 AM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1517571206330_389991587","id":"20170207-123004_1682928173","result":{"code":"SUCCESS","type":"TEXT","msg":"predictionsAndLabels: org.apache.spark.rdd.RDD[(Double, Double)] = MapPartitionsRDD[71] at map at <console>:62\nres19: Array[(Double, Double)] = Array((1.0,1.0), (0.0,0.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (0.0,0.0), (0.0,0.0), (0.0,0.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (0.0,0.0), (1.0,1.0), (0.0,0.0), (0.0,0.0), (1.0,1.0), (0.0,0.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (0.0,0.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (0.0,0.0), (1.0,1.0), (1.0,1.0), (0.0,0.0), (1.0,1.0), (0.0,0.0), (1.0,1.0), (1.0,1.0), (1.0,0.0), (1.0,1.0), (0.0,0.0), (1.0,0.0), (1.0,1.0), (0.0,0.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (0.0,0.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (0.0,0.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (0.0,0.0), (0.0,0.0), (1.0,1.0), (0.0,0.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (0.0,0.0), (0.0,0.0),..."},"dateCreated":"Feb 2, 2018 11:33:26 AM","dateStarted":"Feb 2, 2018 11:48:25 AM","dateFinished":"Feb 2, 2018 11:48:29 AM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:193","focus":true},{"text":"import org.apache.spark.mllib.evaluation.MulticlassMetrics\r\nval metrics = new MulticlassMetrics(predictionsAndLabels)\r\nval pmml= model.toPMML.replace(\"field_0\", \"deviceid\").replace(\"field_1\", \"heartrate\")\r\nprintln(\"\\nCopy this:\\n--- start ---\\n\"+pmml)\r\nprintln(\"---- end ----\")\r\n","authenticationInfo":{},"dateUpdated":"Feb 2, 2018 11:48:37 AM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1517571206330_389991587","id":"20170207-123004_2061913214","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark.mllib.evaluation.MulticlassMetrics\nmetrics: org.apache.spark.mllib.evaluation.MulticlassMetrics = org.apache.spark.mllib.evaluation.MulticlassMetrics@5a0e3e07\npmml: String = \n\"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<PMML version=\"4.2\" xmlns=\"http://www.dmg.org/PMML-4_2\">\n    <Header description=\"logistic regression\">\n        <Application name=\"Apache Spark MLlib\" version=\"1.6.1\"/>\n        <Timestamp>2018-02-02T11:48:33</Timestamp>\n    </Header>\n    <DataDictionary numberOfFields=\"3\">\n        <DataField name=\"deviceid\" optype=\"continuous\" dataType=\"double\"/>\n        <DataField name=\"heartrate\" optype=\"continuous\" dataType=\"double\"/>\n        <DataField name=\"target\" optype=\"categorical\" dataType=\"string\"/>\n    </DataDictionary>\n    <RegressionModel modelName=\"logistic regression\" functionName=\"classification\" normalizationMethod=\"logit\">\n        <MiningSchema>\n            <MiningField name=\"deviceid\" usageType=\"active\"/>\n      ...\nCopy this:\n--- start ---\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<PMML version=\"4.2\" xmlns=\"http://www.dmg.org/PMML-4_2\">\n    <Header description=\"logistic regression\">\n        <Application name=\"Apache Spark MLlib\" version=\"1.6.1\"/>\n        <Timestamp>2018-02-02T11:48:33</Timestamp>\n    </Header>\n    <DataDictionary numberOfFields=\"3\">\n        <DataField name=\"deviceid\" optype=\"continuous\" dataType=\"double\"/>\n        <DataField name=\"heartrate\" optype=\"continuous\" dataType=\"double\"/>\n        <DataField name=\"target\" optype=\"categorical\" dataType=\"string\"/>\n    </DataDictionary>\n    <RegressionModel modelName=\"logistic regression\" functionName=\"classification\" normalizationMethod=\"logit\">\n        <MiningSchema>\n            <MiningField name=\"deviceid\" usageType=\"active\"/>\n            <MiningField name=\"heartrate\" usageType=\"active\"/>\n            <MiningField name=\"target\" usageType=\"target\"/>\n        </MiningSchema>\n        <RegressionTable intercept=\"0.0\" targetCategory=\"1\">\n            <NumericPredictor name=\"deviceid\" coefficient=\"-0.001980833012265659\"/>\n            <NumericPredictor name=\"heartrate\" coefficient=\"0.27485718872410286\"/>\n        </RegressionTable>\n        <RegressionTable intercept=\"-0.0\" targetCategory=\"0\"/>\n    </RegressionModel>\n</PMML>\n\n---- end ----\n"},"dateCreated":"Feb 2, 2018 11:33:26 AM","dateStarted":"Feb 2, 2018 11:48:32 AM","dateFinished":"Feb 2, 2018 11:48:33 AM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:194","focus":true},{"dateUpdated":"Feb 2, 2018 11:33:26 AM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1517571206331_389606838","id":"20170207-123004_1922181598","dateCreated":"Feb 2, 2018 11:33:26 AM","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:195"}],"name":"The Gym","id":"2D4EM758A","angularObjects":{"2D6EF7Q4W:shared_process":[],"2D5RBU4EQ:shared_process":[],"2D64QRTJ5:shared_process":[],"2D7ME6Q2U:shared_process":[],"2D6W3SD78:shared_process":[],"2D6335X73:shared_process":[],"2D6KNMAZR:shared_process":[],"2D65N9EEB:shared_process":[],"2D539NMH4:shared_process":[],"2D628J2H7:shared_process":[],"2D5VP17PB:shared_process":[],"2D52VWWG2:shared_process":[],"2D7EECPZ2:shared_process":[],"2D5YZ83JM:shared_process":[],"2D63TXPJZ:shared_process":[],"2D4R63HV5:shared_process":[],"2D72ZQDXN:shared_process":[],"2D6BA7TRW:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}